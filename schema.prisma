generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EntryType {
  EXPENSE
  INCOME
  TRANSFER_EXPENSE
  TRANSFER_INCOME
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  wallets    Wallet[]
  categories Category[]
  entries    Entry[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Wallet {
  id             Int      @id @default(autoincrement())
  name           String
  initialAmmount Int      @default(0)
  isTransferable Boolean  @default(true)
  ownerId        Int
  owner          User     @relation(fields: [ownerId], references: [id])
  entries        Entry[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Category {
  id              Int        @id @default(autoincrement())
  name            String
  ownerId         Int
  owner           User       @relation(fields: [ownerId], references: [id])
  superCategoryId Int?
  superCategory   Category?  @relation(name: "CategoryToCategory", fields: [superCategoryId], references: [id])
  subCategories   Category[] @relation(name: "CategoryToCategory")
  entries         Entry[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Entry {
  id          Int       @id @default(autoincrement())
  value       Int       @default(0)
  description String?
  timestamp   DateTime  @default(now())
  place       String?
  isFixed     Boolean   @default(false)
  type        EntryType
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id])
  walletId    Int?
  wallet      Wallet?   @relation(fields: [walletId], references: [id])
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
